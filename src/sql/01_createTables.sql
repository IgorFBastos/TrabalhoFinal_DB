-- Tabela 1: Alunos
-- Armazena os dados cadastrais dos membros da academia.
CREATE TABLE aluno (
    matricula_aluno INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome_aluno VARCHAR(100) NOT NULL,
    cpf_aluno CHAR(11) NOT NULL UNIQUE,
    data_nascimento_aluno DATE,
    telefone_aluno VARCHAR(15) NOT NULL,
    email_aluno VARCHAR(100) NOT NULL UNIQUE,
    endereco_aluno TEXT,
    data_matricula_aluno DATE NOT NULL DEFAULT CURRENT_DATE
);


-- Tabela 2: Instrutores
-- Armazena os dados dos instrutores.
CREATE TABLE instrutor (
    cod_instrutor INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome_instrutor VARCHAR(100) NOT NULL,
    telefone_instrutor VARCHAR(15),
    email_instrutor VARCHAR(100) UNIQUE,
    cref_instrutor VARCHAR(20) NOT NULL UNIQUE,
    especializacao_instrutor VARCHAR(100)
);


-- Tabela 3: Planos
-- Catálogo de planos oferecidos pela academia.
CREATE TABLE plano (
    cod_plano INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome_plano VARCHAR(100) NOT NULL UNIQUE,
    valor_plano NUMERIC(10, 2) NOT NULL,
    duracao_meses_plano INTEGER NOT NULL,
    descricao_plano TEXT
);


-- Tabela 4: Salas
-- Catálogo de salas e espaços da academia.
CREATE TABLE sala (
    cod_sala INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome_sala VARCHAR(100) NOT NULL UNIQUE,
    descricao_sala TEXT,
    capacidade_sala INTEGER
);


-- Tabela 5: Modalidades
-- Catálogo das modalidades de aulas em grupo (ex: Spinning, Zumba).
CREATE TABLE modalidade (
    cod_modalidade INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome_modalidade VARCHAR(100) NOT NULL UNIQUE,
    descricao_modalidade TEXT
);


-- Tabela 6: Assinaturas
-- Entidade central que representa o contrato de um aluno com um plano.
CREATE TABLE assinatura (
    cod_assinatura INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    matricula_aluno INTEGER NOT NULL,
    cod_plano INTEGER NOT NULL,
    data_inicio DATE NOT NULL,
    data_fim DATE NOT NULL,
    status_assinatura VARCHAR(50) NOT NULL, 
    valor_contratado NUMERIC(10, 2) NOT NULL,
    CONSTRAINT FK_assinatura_aluno FOREIGN KEY (matricula_aluno) REFERENCES aluno (matricula_aluno) ON DELETE RESTRICT,
    CONSTRAINT FK_assinatura_plano FOREIGN KEY (cod_plano) REFERENCES plano (cod_plano) ON DELETE RESTRICT
);


-- Tabela 7: Pagamentos
-- Registra as transações financeiras para quitar uma assinatura.
CREATE TABLE pagamento (
    cod_pagamento INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cod_assinatura INTEGER NOT NULL,
    data_vencimento DATE NOT NULL,
    data_pagamento DATE,
    valor_pago NUMERIC(10, 2),
    status_pagamento VARCHAR(50) NOT NULL, 
    CONSTRAINT FK_pagamento_assinatura FOREIGN KEY (cod_assinatura) REFERENCES assinatura (cod_assinatura) ON DELETE CASCADE
);


-- Tabela 8: Fichas de Treino
-- Armazena a estrutura principal de uma ficha de treino.
CREATE TABLE ficha_treino (
    cod_ficha_treino INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    matricula_aluno INTEGER NOT NULL,
    cod_instrutor INTEGER NOT NULL,
    data_inicio DATE NOT NULL,
    data_fim DATE,
    CONSTRAINT FK_ficha_treino_aluno FOREIGN KEY (matricula_aluno) REFERENCES aluno (matricula_aluno) ON DELETE CASCADE,
    CONSTRAINT FK_ficha_treino_instrutor FOREIGN KEY (cod_instrutor) REFERENCES instrutor (cod_instrutor) ON DELETE RESTRICT
);


-- Tabela 9: Exercícios
-- Catálogo de todos os exercícios possíveis.
CREATE TABLE exercicio (
    cod_exercicio INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome_exercicio VARCHAR(100) NOT NULL UNIQUE,
    grupo_muscular VARCHAR(100),
    descricao_exercicio TEXT
);


-- Tabela 10: Detalhes da Ficha de Treino (Exercícios)
-- Tabela de junção que detalha os exercícios de cada ficha.
CREATE TABLE exe_ficha_treino (
    cod_exe_ficha_treino INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cod_ficha_treino INTEGER NOT NULL,
    cod_exercicio INTEGER NOT NULL,
    series INTEGER,
    repeticoes VARCHAR(50), -- VARCHAR para acomodar 'até a falha', '10-12', etc.
    carga NUMERIC(6, 2),
    tempo_descanso_segundos INTEGER,
    ordem INTEGER,
    CONSTRAINT FK_exe_ficha_treino_ficha FOREIGN KEY (cod_ficha_treino) REFERENCES ficha_treino (cod_ficha_treino) ON DELETE CASCADE,
    CONSTRAINT FK_exe_ficha_treino_exercicio FOREIGN KEY (cod_exercicio) REFERENCES exercicio (cod_exercicio) ON DELETE RESTRICT
);


-- Tabela 11: Aulas em Grupo
-- Agenda de aulas em grupo.
CREATE TABLE aula (
    cod_aula INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome_aula VARCHAR(100) NOT NULL,
    cod_instrutor INTEGER NOT NULL,
    cod_modalidade INTEGER NOT NULL,
    cod_sala INTEGER NOT NULL,
    data_aula DATE NOT NULL,
    hora_inicio TIME NOT NULL,
    hora_fim TIME NOT NULL,
    limite_vagas INTEGER,
    CONSTRAINT FK_aula_instrutor FOREIGN KEY (cod_instrutor) REFERENCES instrutor (cod_instrutor) ON DELETE RESTRICT,
    CONSTRAINT FK_aula_modalidade FOREIGN KEY (cod_modalidade) REFERENCES modalidade (cod_modalidade) ON DELETE RESTRICT,
    CONSTRAINT FK_aula_sala FOREIGN KEY (cod_sala) REFERENCES sala (cod_sala) ON DELETE RESTRICT
);


-- Tabela 12: Inscrição em Aulas
-- Registra quais alunos se inscreveram em quais aulas.
CREATE TABLE inscricao_aula (
    matricula_aluno INTEGER NOT NULL,
    cod_aula INTEGER NOT NULL,
    data_inscricao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    presenca_aula BOOLEAN DEFAULT FALSE,
    PRIMARY KEY (matricula_aluno, cod_aula),
    -- Se o aluno ou a aula forem deletados, a inscrição some.
    CONSTRAINT FK_inscricao_aula_aluno FOREIGN KEY (matricula_aluno) REFERENCES aluno (matricula_aluno) ON DELETE CASCADE,
    CONSTRAINT FK_inscricao_aula_aula FOREIGN KEY (cod_aula) REFERENCES aula (cod_aula) ON DELETE CASCADE
);


-- Tabela 13: Avaliação Física
-- Registra o evento de uma avaliação física.
CREATE TABLE avaliacao_fisica (
    cod_avaliacao_fisica INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    matricula_aluno INTEGER NOT NULL,
    cod_instrutor INTEGER NOT NULL,
    data_avaliacao DATE NOT NULL,
    observacao_avaliacao TEXT,
    CONSTRAINT FK_avaliacao_fisica_aluno FOREIGN KEY (matricula_aluno) REFERENCES aluno (matricula_aluno) ON DELETE CASCADE,
    CONSTRAINT FK_avaliacao_fisica_instrutor FOREIGN KEY (cod_instrutor) REFERENCES instrutor (cod_instrutor) ON DELETE RESTRICT
);


-- Tabela 14: Tipos de Medida
-- Catálogo de todos os tipos de medidas que podem ser feitas em uma avaliação.
CREATE TABLE tipo_medida (
    cod_tipo_medida INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome_medida VARCHAR(100) NOT NULL UNIQUE,
    unidade_medida VARCHAR(20) 
);


-- Tabela 15: Resultados da Avaliação
-- Armazena cada medida específica de uma avaliação física.
CREATE TABLE resultado_avaliacao (
    cod_avaliacao_fisica INTEGER NOT NULL,
    cod_tipo_medida INTEGER NOT NULL,
    resultado NUMERIC(10, 2) NOT NULL,
    PRIMARY KEY (cod_avaliacao_fisica, cod_tipo_medida),
    CONSTRAINT FK_resultado_avaliacao_avaliacao FOREIGN KEY (cod_avaliacao_fisica) REFERENCES avaliacao_fisica (cod_avaliacao_fisica) ON DELETE CASCADE,
    CONSTRAINT FK_resultado_avaliacao_medida FOREIGN KEY (cod_tipo_medida) REFERENCES tipo_medida (cod_tipo_medida) ON DELETE RESTRICT
);


-- Tabela 16: Frequência
-- Registra a entrada e saída dos alunos na academia.
CREATE TABLE frequencia (
    cod_frequencia INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    matricula_aluno INTEGER NOT NULL,
    data_hora_entrada TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    data_hora_saida TIMESTAMP,
    CONSTRAINT FK_frequencia_aluno FOREIGN KEY (matricula_aluno) REFERENCES aluno (matricula_aluno) ON DELETE CASCADE
);


